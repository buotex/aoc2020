#include <array>
#include <iostream>
const char * test_algorithm
const char * test_input = R"(#..#.
#....
##..#
..#..
..###)";
const char * algorithm
const char * puzzle_input = R"(##..###.#.###..##.##..####.#..#.#.###..#.#.#....#.#.###...#.....#.##.##..#.####.##.#.####.#.#.....##
...#.#.###...###..##...#####..##..#..#.#..#.#...#.#..###...#..##.##....#.....#...########.######.##.
#...#.#.####....#....###..#.#.###.#.....####....###.#.###.#..###.###....##.##..#.##...##....##.##...
###..###.#..#######.....#..##.###..#####...##.###..#....##.##....####...#..###..###.#...##...###.###
#######.#........#####.##..##..#...#######..#.##...#.###...###...######...#####..#.#.#..#..#.#.#.#..
..##.#.##.##.#...#.#.#........##.##.###..###.##.#.#.#.#..##.#.###..######..#.....#..#.###..#....#.#.
.#.....##.#...#.###...#.##..#.##.##.#.#.#####...###.#.##.###..#.#.#..#..##########.#.#####.##.#..##.
.#.#.##..#.#.####..#...#.#..##.########.#.###.#.#......##..########.####.##...###....###......#.#.##
##.#.#.#######..#....###...##.#.#.#..#.#.###.###..#....#..###....#.....##.####.##..##..##..#.###....
.##..#######.######....#.#..#.......#.#.####.#.####.....#.####..##.#..##..##..#......#...###...#..#.
###.#..###..##..#.##...###.####...##........#..##.#.#.#.##...####...##..#..#.####......##..#..##.##.
#.#.##...#.##......#.......###.......##...#...#####.#.#..##..#..#####.###.######..###.###......##.##
#.#####.#.#..#...#.#..###.###.....###.##...#.##.##.###..#...##..##...#####...#.....##.#..####.#.###.
..######..###.#.#...#.#.##......###......#.#######..#.#....#.##....#..#.#.##....###.##.#.#...#...##.
##.##..#.##.##.#.#####.#####.##.#.##.#...##..##....##....###....##.###..##.###.#.#...##....##.#.##.#
.#.##.#.#.#.##...#.#.###.#...#.#....####.##.#..#####.#.#..######.##..#.#.#####....###..##..#.#......
..###.....#.###.......#...#...##.#...##.##..##.##..##...###.#..#...##..#.#.#.##...#.#..#####.##..#.#
.##..#...#.##.##.#.###....##...#..####...##......###..##...#####.##..#..#.#..#####......#....#.##..#
.#.#.###.#...#.##.##.####...###.#.#..#...###.....##..#.#..###.##.#.#...#.##...###....##.#.##..#..###
.#..###.##.####.##..#..#.#.######..#.#..#...#####...##..#..##.#.#.##.##.#...###..##..##...#.##..#...
###.####...###.....#.#####.....#...###.##..#....#.####......#.#..##.#.#.####..#..#...#.#####.#.###.#
#....####...#..#..###...##...##.##....#.#.#....####.#..#.##.#.##.###.#..###.##..###..#.....####....#
.##..#....#..#..#....#...#...##.##..#..###.###...#######.##.##..##.#..#.#..#.#.#.#..####..#####...#.
#.###......#####.###..##.##.#...##.#.###..##..##.....#...########.#..#####......#..###..#.##...#....
#....##...#.###..##...#..###.####..#.###...##.#.##..####..##.#.#####..#...######....#.##.#..#.....##
.##.#.#.###.#####...#....#......####.##..####..#.#.#.#.#..#.......###.#.....##..##...##..##...###.#.
.#...#.##..#.####.###.###....####..#.##.#....####..#..#...#.####.##.####.#.##.#.####..###......####.
..#.#...#.#.###.##...#...#.......#....#....###.#.......#.#..####.#.###.#.#....#.#.#..#.#..#...#..###
#...###.###.#...#........###...#.##..###.##.#.##..##.....##.#.##...####..#..#.#.##.####.....#.######
.#.##..#.#.###.#.#.......##.#.##########.#.#.....#..#####.#.....#.#####..###.##......#.#.....####...
.#.#########....###..#.#######.#.....#.#..##...##...#.#####.##....#.#.#..##.....#.#.#.##.#.#..##..##
###.##.#.####.#...###.#.##..####.###...#######..###.#...#.#...##.####..#....####.####..####.#.###...
..##..#...#.#.##...#.###.#########.#..####..###.##..##.##..##...###.#..###...#..#.#..#.#####.###..##
.#.##...#..##.###.....####.#.....#.#.####.#....##..#....##.##.##..#.###.###.####..##..##..##...#####
.##.#.#..####.#.#...#..###.#.##..#.#.###.#..#...###.....#....###..#.#.#.##.###.###..##.#.#.###.##.#.
#..#####.####.....#.#.#...##.#..#.#....#.#####.#.#####...#.#.#.####..#.#####..##.#..#.###..####.####
#.###...#...#####.###.#.##..##.#.#..##..#..#.##.##.#.....##....#####..##.#.##..#.#......#####.#..#.#
###......#........####.#####..###....#.#.##..#.#.##.##.##.###......###.####...##...##.##.##.#.#.####
##.#.#.......###..#.##.##....#.####...#..#....#...#.#..#..#..###..#.####.###.##.#..#######..#.#...##
..#....##...#..#...#..#.##.##.###.#.##.####....#..#.#.#.#####.#..#.#.....###.#...###.##.#...#..#.###
#..#..#.....#..###..##.#.##..##.#.#.###.##..##..#######.#..#.#..#.#..##.#...#.#.#.###.##..#.#..####.
..#...##..#.#.##..#.#..#..##..#.###..#########....##...#####.###..#...#.#..##.##......#.##.#..#.....
..##.##....#..#.#..#..####..####..#...##...#..##.##..##..##.#.##.###.............###...###..#####.##
...#####...#..#.#.#..#.##...####.####..###.######..#..###..#...##.###...##.##.#.#######.....#..###.#
####......#.#.#...#####.#.##.#...##.....##..#..#......##.###.###..###.####.##.##..#...###.####..###.
#####....##..##.......#..#...###....#..##.#..#.#.#...#..#..#.#.##.#####...###.....###..#..##....##.#
#.####.##...#.###.#.#.#..###.#..#..###..#.##...#...##..##.#....###......#...#..######.#.#....#..###.
####....##...#.#..###.##.#.....#..#...####.....#...##....####..##.##..#####..##.#.#....###....#.#..#
##..##.##....#####....#..#..####.#####.#.##.###.#...###..#....#..##.#.....#.#..#.###..##.#.#..##.#..
.##...#.##..#.#.####.##...#...##.#.######..#####.#...#..##.....####...#..########..#.##.....#.#....#
#.#..##..#.#...#...#.#.##..#.#.#.#..#.###..##.#..#.###.....#####.##.#######.###..#..##..#...#.####.#
.#..####.###....##.#..#.#.#.###.##..###..#....##.##.#.######.##...#...#.#.###..#######.###.###.#..#.
.#....##.##..##.#......####.##...####.####.###.###.##.###....#..#.#...##.####.###.###...#..#...##.##
#.##..##.##...#.#####..###....##.####.###.#.#.###..#....##.#.#.#..#.##.###.########.##.#..##..##.##.
.#...#.##.###......#.#####...##..#.#...##.##.....#.##.##.#.#...#..###....####....##....#.#####.#..#.
###..###.####.##..##...#...#.#..###..##..#..#.#####...####..###.#..##..#.###..##....#..#..#.#.#.#...
##.#####..#..#....#.#.##.#.####...####.#..#.....#..##.####......#.#######.##..##..###..#.#.##....###
#.####..#...#..#.##..#.#.....#..#.##.#.#..#...#....##.......#.#.#.#########.######.####....#....#..#
...##...#.#.##...#..##.#.#.#.#..#.#.....#....##.##.###.####.####....#.#.###.##...#.##.....###...##.#
....#.#.#..##....##.#..#.##..#..#.#.###.#..#.#####.#.##.##.##..#..####..###.#.##..#....#.##..###.###
.##.....#.#.......#.###.####.....#.###..##..###..####.##.######........####.##.#.##...##.###..#.###.
.###..#..#.#.#.########..#..#....#.#.#.#...#..#.#...#.###..##.###.####...#....#.#.#####.#...####.###
.##......##.###.###....#.##.#####.#....##..#####.##.##.#.....###...##.....##.##.#..###.....###.#.#..
....#.##.#.....###.#..#.####...#####...######.##.##..#.#..#.#.#...#.#.##...##....####...##.#.#.#.##.
.#....##.#.#...##.#.........##..#.#......#.#..#.......###.#.###....##.#...#..#.#.#.#.###...##..#####
#..#.#.....#..###.###.#...##..##.#...####..###.#.#..###.###..#..#.#.#.########.#....#.####....####.#
.#..#####.######.#..#..#.##.######.#.###.###.###..###.....#...#.###.###....#.#.##.#..#..#.#...#.##.#
#.#..#..#.#.#.#....#......###...#..##.##...##.####.#.#....#...#.#.##....##.##..#.#.#....####..#.#.#.
..#...##.###......###.#..#.#...##.#.###.###.#.####......#..#...#..######.#.##.########..#..#.#......
....##.#.##.##..#..###.....###...#.#.##...#.######....###...##.##..##..##.##....#.#.##..###...##.#.#
####.#.###.###.###.#.####..#.......######..##....####.#.####......#...#.#####..#.###..######.#.#.#.#
#.........##...#.#.#####...#.##..#.#..#.##.##..#.###..##.#..###.##..###.#..######..#.####...#.####.#
..#.#.####....#.#####.###....###..#...#...#.#..###.##.##..#.....##......##.#...#.###...##.#########.
##..####.....##.#......#..#....##.##.#..##.#..##.##...#.#...#.#..##.....######.#.##..#...#....##.#.#
.#.##..#.##.#...##...##..##.#.#..####......#...######.###.###.##..#.#.........###..#.#.#......#....#
##.###.###..#....#....#...#.##.#.####..#...#.#.##.#.##.#.#...#.#.#...##..#....######....####...#.#.#
.####.#.....#####..#....#.#.##..##..#...#.####.##.#..###..###.#...###.####...##.##..#....#.#.#..##..
####.#....##..####...#.#.#..###..#####.#.#.#..##.####.##.#......###.#...#.##.#......#..##.#...#.##.#
#....##.....#.##.#####..#.#.###....#.#...#.####.#.#...###..##...#.###.###......#.#...#..##..##.#####
##.#..#.##..###.#.######...#.#.#...#......###......#..#..##....###.####..##.###...##.#...#..#.##....
.##...#.#.####.#.##..#.#.....##....#.##.###.#.#...##.####...#.#..#.###...##.######.##.###.....#...#.
##...##.#...#.#......##.#..#...##.######.####.#.##.##.###.##..#........##.#.#...#.#.##.#..##.#.#.#.#
#..##.#..##.#.##..##.#...###...#####.##...######...#.##.##..#.##.#.#..#########.#......###.#.##...##
..#.#.#..###......##.##.###.##.##.##.##.......##....#####..####.##..##.##..#....##....#......#..#..#
...###..##....##..#.#######..######..#............#.....#..#.#.#....####.#.##.#.#.....###...#.#...#.
###.#....#...##....#.#..##....###..##..###..#.#..##.##......#....#...#...####.....#..##....##..#..##
#.##.#...###.##..#..#.######....###.#...#....#.###......#.###.#...#.#..##..##..#....#.....#...##.###
...##...##....##.....#....#.#####.##..##.###.###.#.....#..#...#.####.#.#..#..#.###.##....##..#..#..#
##.##.###..#.#.....#.....##...#....#..#........#..#.##.###..#.........#...#.##.##.###..#...#####..##
..###.#.#.####.....####...#.#..#....##.###..###.##...#.#...#.####..####.#.#..#.#####.#......#.###...
.####....###.#...###...#.##.####.....#.#....#..#.##..#.#.#....##.#..#.###..##..#..#.#.####.#....####
###.#....#..##..##.####.##.#.#....##.......#..#......##..#.##.#####..###..#....###.#.........#..#.#.
..#....##...#...###.##.#..#..#....##.#####..##..#.####...#.#..##..##....##...##..###.#.###.##.#..###
......##.#######...#...#..##...##.#..#.......#..##...#.#.###.###..##.#...###..##.##.#.##.#..######..
##..#...#.###..####.####..###.#.##..#.#.##.#..#.##.....##..###...#.##..#....###..##...###.....#.#...
.##.#.#...#.#..#.#######.##.#.#..#..###..#.##.#..#####.#.###.###..####....#.####.....###...###..##.#
#...#...##.###.#..##..#..##...#.###.....#..####..#..#.#.#.##.#.#.##..#.##.#...##..###.#..#.#..#.#...
#.#..##....#.#.##.##..##..#.##.#####.##..####.#.#.#......#.######.......##...#...#.##.#..####..#.###
...#..#.....##.#.#.###.....######..#.##.....##....##..###.####..##.##.###.#.....###.###.#.#..##..#..
##.#...##.#..###.#.#.##..#...###..##.###.###...#...#.#.##.#.##.#...####.####..###..#.##.#.##..##.##.)";

template <size_t N>
std::unique_ptr<std::array<std::array<char, N+2>, N+2>>  iteration(std::unique_ptr<std::array< std::array<char, N>, N>> input, char border='.') {
  auto output = std::make_unique<std::array<std::array<char, N+2>, N+2>>();
  for (size_t i = 0; i < N+2; ++i) {
    for (size_t j = 0; j < N+2; ++j) {
      size_t index = 8;
      std::bitset<9> neighborhood;

      for (int k = -1; k <= 1; ++k) {
        for (int l = -1; l <= 1; ++l) {
          auto value = border;
          if ((i-1+k >= 0) && (i-1+k < N) && (j-1+l >= 0) && (j-1+l < N)) value = (*input)[i-1+k][j-1+l];
          neighborhood[index] = (value == '#');
          --index;
        }
      }
      //std::cout << neighborhood.to_string() << std::endl;
      (*output)[i][j] = algorithm[neighborhood.to_ulong()];
    }
  }
  return output;
}

template <size_t N>
std::unique_ptr<std::array<std::array< char, N>, N>> recursive_zoom(
  std::unique_ptr<std::array< std::array< char, N>, N>> input, char border='.', std::integral_constant<size_t, 0> = std::integral_constant<size_t, 0>()) {
  return input;
}

template <size_t N, size_t I>
std::unique_ptr<std::array<std::array< char, N+(I*2)>, N+(I*2)>> recursive_zoom(
  std::unique_ptr<std::array< std::array< char, N>, N>> input, char border='.', std::integral_constant<size_t, I> = std::integral_constant<size_t, I>()) {

  auto output = iteration(std::move(input), border);
  if (border == '.') {
    border = '#';
    }
  else {
    border = '.';
  }

  auto result = recursive_zoom(std::move(output), border, std::integral_constant<size_t, I-1>());
  return result;
}
  

int main () {
  constexpr size_t N = 100;
  std::array<std::array< char, N>, N> puzzle_input_arr;
  for (int i = 0; i < N; ++i) {
    for (int j = 0; j < N; ++j) {
    puzzle_input_arr[i][j] = puzzle_input[(N+1) * i + j];
    }
  }
  uint64_t sum = 0;
  auto buffer = std::make_unique<decltype(puzzle_input_arr)>();
  for (size_t i = 0; i < N; ++i) {
    for (size_t j = 0; j < N; ++j) {
      (*buffer)[i][j] = puzzle_input_arr[i][j];
    }
  }
  auto recursive_output = recursive_zoom(std::move(buffer), '.', std::integral_constant<size_t, 50>());
  sum = 0;
  for (auto const &subarray : *recursive_output) {
    std::cout << std::string(begin(subarray), end(subarray)) << '\n';
    for (auto entry: subarray) {
      sum += (entry == '#');
      }
  }
std::cout << sum << std::endl;

}